<?php    if (!defined("_VALID_PHP"))        die('Direct access to this location is not allowed.');#####################//CONFIGURATIONS#####################// Define the name of the backup directory    define('BACKUP_DIR', './backup' ) ;    /*    Define the filename for the sql file    If you plan to upload the  file to Amazon's S3 service , use only lower-case letters    */    $fileName = 'mysqlbackup--' . date('d-m-Y') . '@'.date('h.i.s').'.sql' ;// Set execution time limit    if(function_exists('max_execution_time')) {        if( ini_get('max_execution_time') > 0 ) 	set_time_limit(0) ;    }###########################//END  OF  CONFIGURATIONS###########################// Check if directory is already created and has the proper permissions    if (!file_exists(BACKUP_DIR)) mkdir(BACKUP_DIR , 0700) ;    if (!is_writable(BACKUP_DIR)) chmod(BACKUP_DIR , 0700) ;// Create an ".htaccess" file , it will restrict direct accss to the backup-directory .    $content = 'deny from all' ;    $file = new SplFileObject(BACKUP_DIR . '/.htaccess', "w") ;    $file->fwrite($content) ;    //commande    $cmd="mysqldump -h ".HOST." -u ".USER;    if(PASSWORD) $cmd.=" -p ".PASSWORD;    $cmd.=" ".DATABASE." > ".BACKUP_DIR . "/". $fileName;    exec($cmd);    $fileSize = get_file_size_unit(filesize(BACKUP_DIR . "/". $fileName)) ;    $message = <<<msg  <h2>BACKUP  complet ,</h2>  Le nom du fichier est  : <b>  $fileName  </b> sa taille est :   $fileSize  .msg;    echo $message ;// Function to append proper Unit after file-size .    function get_file_size_unit($file_size){        switch (true) {            case ($file_size/1024 < 1) :                return intval($file_size ) ." Bytes" ;                break;            case ($file_size/1024 >= 1 && $file_size/(1024*1024) < 1)  :                return intval($file_size/1024) ." KB" ;                break;            default:                return intval($file_size/(1024*1024)) ." MB" ;        }    }?>